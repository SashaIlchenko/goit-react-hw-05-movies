{"version":3,"file":"static/js/257.50c84570.chunk.js","mappings":"kTACMA,EAAW,gCACXC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,yGAAiCC,EAAjC,+BAAwC,EAAxC,SACoBC,EAAAA,EAAAA,IAAA,UAAaJ,EAAb,sCAAmDC,EAAnD,iBAAmEE,EAAnE,sBADpB,cACGE,EADH,yBAEIA,EAASC,MAFb,mEAKA,SAAeC,EAAtB,iDAAO,OAAP,oBAAO,WAA+BC,EAAML,GAArC,uFACoBC,EAAAA,EAAAA,IAAA,UAAaJ,EAAb,gCAA6CC,EAA7C,iBAA6DE,EAA7D,4DAAqHK,IADzI,cACGH,EADH,yBAEIA,EAASC,MAFb,kEAKA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,uFACoBN,EAAAA,EAAAA,IAAA,UAAaJ,EAAb,iBAA8BU,EAA9B,oBAA4CT,EAA5C,oBADpB,cACGI,EADH,yBAEIA,EAASC,MAFb,kEAIA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA+BD,GAA/B,uFACoBN,EAAAA,EAAAA,IAAA,UAAaJ,EAAb,iBAA8BU,EAA9B,4BAAoDT,EAApD,oBADpB,cACGI,EADH,yBAEIA,EAASC,MAFb,kEAKA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAA+BF,GAA/B,uFACoBN,EAAAA,EAAAA,IAAA,UAAaJ,EAAb,iBAA8BU,EAA9B,4BAAoDT,EAApD,oBADpB,cACGI,EADH,yBAEIA,EAASC,MAFb,kE,+KCpBMO,EAAUC,EAAAA,GAAAA,IAAH,2HAOPC,EAAOD,EAAAA,GAAAA,IAAH,wDAGJE,GAAWF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,wQ,kBCkCrB,EAxCqB,WAAO,IAAD,IACfI,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOC,EAAP,KAAcC,EAAd,KAEMC,EAAY,qBADDC,EAAAA,EAAAA,MACaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAc7C,OAZAC,EAAAA,EAAAA,YAAU,WAAM,wCAEZ,8GAE8BlB,EAAAA,EAAAA,IAAgBS,GAF9C,OAEcU,EAFd,OAGQN,EAASM,GAHjB,gDAKQC,QAAQC,IAAR,MALR,0DAFY,uBAAC,WAAD,wBAUZC,EACH,GAAE,CAACb,KACI,iCAAE,SAACF,EAAD,CAAUgB,GAAIT,EAAd,sBACN,UAACV,EAAD,YAAU,gBAAKoB,IAAMZ,EAAMa,YAAP,0CAAqEb,EAAMa,aAAtDC,EACrCC,IAAKf,EAAMgB,SACX,4BAAK,0BAAKhB,EAAMgB,MAAX,IAAoBhB,EAAMiB,aAAkCjB,EAAMiB,aAAaC,MAAM,EAAG,GAA/C,iBAAzC,QACD,wCAAgBC,KAAKC,MAA2B,GAArBpB,EAAMqB,cAAjC,QACA,sCACA,uBAAIrB,EAAMsB,YACV,oCACA,uBAAKtB,EAAMuB,OAAuBvB,EAAMuB,OAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMtC,IAAV,IAAgBuC,KAAK,MAAzD,iBAP5B,SASA,UAAChC,EAAD,YACI,kDACA,2BACI,yBAAI,SAAC,KAAD,CAASiB,GAAG,OAAOP,MAAO,CAAEC,KAAMH,GAAlC,qBACJ,yBAAI,SAAC,KAAD,CAASS,GAAG,UAAUP,MAAO,CAAEC,KAAMH,GAArC,2BAER,SAAC,EAAAyB,SAAD,CAAUC,UAAU,gDAApB,UACI,SAAC,KAAD,WAIf,C","sources":["API.js","pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from \"axios\";\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'e8d94f3e976148bda0a5c640d4df112b';\n\nexport async function getTrendingMovies(page = 1) {\n    const response = await axios.get(`${BASE_URL}trending/movie/day?api_key=${API_KEY}&page=${page}&media_type=movie`)\n    return response.data;\n}\n\nexport async function getSearchMovies(name, page) {\n    const response = await axios.get(`${BASE_URL}search/movie?api_key=${API_KEY}&page=${page}&language=en-US&page=1&include_adult=false&query=${name}`)\n    return response.data;\n}\n\nexport async function getMovieDetails(id) {\n    const response = await axios.get(`${BASE_URL}movie/${id}?api_key=${API_KEY}&language=en-US`)\n    return response.data;\n}\nexport async function getMovieCredits(id) {\n    const response = await axios.get(`${BASE_URL}movie/${id}/credits?api_key=${API_KEY}&language=en-US`)\n    return response.data;\n}\n\nexport async function getMovieReviews(id) {\n    const response = await axios.get(`${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}&language=en-US`)\n    return response.data;\n}","import styled from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const Wrapper = styled.div`\ndisplay: flex;\ngap: 15px;\nalign-items: center;\nmargin: 15px 0;\n border-bottom: 1px solid black;`\n\nexport const Info = styled.div`\n border-bottom: 1px solid black;`\n\nexport const BackLink = styled(NavLink)`\ndisplay: block;\nwidth: 100px;\nheight: 30px;\ntext-decoration: none;\ntext-align: center;\nborder-radius: 6px;\nbackground-color: grey;\ncolor: white;\npadding: 8px 4px 4px 8px; \n&:focus, \n&:hover {\n    background-color: orangered;\n  }`","import { useEffect, useState } from \"react\";\nimport { Suspense } from \"react\";\nimport { Outlet, useParams, useLocation, NavLink } from \"react-router-dom\";\nimport { getMovieDetails } from \"API\";\nimport { Wrapper, Info, BackLink } from \"./MovieDetails.styled\";\nimport defaultImg from './defaultImg.jpg'\n\nconst MovieDetails = () => {\n    const { movieId } = useParams();\n    const [movie, setMovie] = useState({});\n    const location = useLocation();\n    const backLinkHref = location.state?.from ?? \"/\";\n\n    useEffect(() => {\n\n        async function getDetails() {\n            try {\n                const details = await getMovieDetails(movieId);\n                setMovie(details);\n            } catch (error) {\n                console.log(error);\n            }\n        }\n        getDetails();\n    }, [movieId]);\n    return (<><BackLink to={backLinkHref} >Go back</BackLink>\n        <Wrapper ><img src={!movie.poster_path ? defaultImg : `https://image.tmdb.org/t/p/w300/${movie.poster_path}`}\n            alt={movie.title} />\n            <div><h1>{movie.title}({!movie.release_date ? 'Coming soon...' : movie.release_date.slice(0, 4)})</h1>\n                <p>User score: {Math.round(movie.vote_average * 10)}%</p>\n                <h2>Overview</h2>\n                <p>{movie.overview}</p>\n                <h3>Genres</h3>\n                <p>{!movie.genres ? \"No genres\" : movie.genres.map(genre => genre.name).join(', ')}</p>\n            </div>  </Wrapper >\n        <Info>\n            <p>Aditional information</p>\n            <ul>\n                <li><NavLink to=\"cast\" state={{ from: backLinkHref }}>Cast</NavLink ></li>\n                <li><NavLink to=\"reviews\" state={{ from: backLinkHref }}>Reviews</NavLink></li>\n            </ul>\n            <Suspense fallback={<div>Loading subpage...</div>}>\n                <Outlet />\n            </Suspense>\n        </Info>\n    </>)\n}\nexport default MovieDetails;\n\n"],"names":["BASE_URL","API_KEY","getTrendingMovies","page","axios","response","data","getSearchMovies","name","getMovieDetails","id","getMovieCredits","getMovieReviews","Wrapper","styled","Info","BackLink","NavLink","movieId","useParams","useState","movie","setMovie","backLinkHref","useLocation","state","from","useEffect","details","console","log","getDetails","to","src","poster_path","defaultImg","alt","title","release_date","slice","Math","round","vote_average","overview","genres","map","genre","join","Suspense","fallback"],"sourceRoot":""}