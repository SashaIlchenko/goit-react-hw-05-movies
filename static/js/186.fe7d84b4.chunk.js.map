{"version":3,"file":"static/js/186.fe7d84b4.chunk.js","mappings":"kTACMA,EAAW,gCACXC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,yGAAiCC,EAAjC,+BAAwC,EAAxC,SACoBC,EAAAA,EAAAA,IAAA,UAAaJ,EAAb,sCAAmDC,EAAnD,iBAAmEE,EAAnE,sBADpB,cACGE,EADH,yBAEIA,EAASC,MAFb,mEAKA,SAAeC,EAAtB,iDAAO,OAAP,oBAAO,WAA+BC,EAAML,GAArC,uFACoBC,EAAAA,EAAAA,IAAA,UAAaJ,EAAb,gCAA6CC,EAA7C,iBAA6DE,EAA7D,4DAAqHK,IADzI,cACGH,EADH,yBAEIA,EAASC,MAFb,kEAKA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,uFACoBN,EAAAA,EAAAA,IAAA,UAAaJ,EAAb,iBAA8BU,EAA9B,oBAA4CT,EAA5C,oBADpB,cACGI,EADH,yBAEIA,EAASC,MAFb,kEAIA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA+BD,GAA/B,uFACoBN,EAAAA,EAAAA,IAAA,UAAaJ,EAAb,iBAA8BU,EAA9B,4BAAoDT,EAApD,oBADpB,cACGI,EADH,yBAEIA,EAASC,MAFb,kEAKA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAA+BF,GAA/B,uFACoBN,EAAAA,EAAAA,IAAA,UAAaJ,EAAb,iBAA8BU,EAA9B,4BAAoDT,EAApD,oBADpB,cACGI,EADH,yBAEIA,EAASC,MAFb,kE,8GCQP,UA1BgB,WACZ,OAA8BO,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAYR,OAXAE,EAAAA,EAAAA,YAAU,WAAM,wCACZ,8GAE2BN,EAAAA,EAAAA,IAAgBI,GAF3C,OAEcV,EAFd,OAGQS,EAAWT,EAAKa,SAHxB,gDAKQC,QAAQC,IAAR,MALR,0DADY,uBAAC,WAAD,wBASZC,EACH,GAAE,CAACN,IACKF,EAAQS,QAAuC,0BAEhDT,EAAQU,KAAI,SAAAC,GACR,OAAO,2BACH,oCAAYA,EAAOC,WACnB,uBAAID,EAAOE,YAFCF,EAAOf,GAI1B,IAP+C,OAA9B,2BAU7B,C","sources":["API.js","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from \"axios\";\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'e8d94f3e976148bda0a5c640d4df112b';\n\nexport async function getTrendingMovies(page = 1) {\n    const response = await axios.get(`${BASE_URL}trending/movie/day?api_key=${API_KEY}&page=${page}&media_type=movie`)\n    return response.data;\n}\n\nexport async function getSearchMovies(name, page) {\n    const response = await axios.get(`${BASE_URL}search/movie?api_key=${API_KEY}&page=${page}&language=en-US&page=1&include_adult=false&query=${name}`)\n    return response.data;\n}\n\nexport async function getMovieDetails(id) {\n    const response = await axios.get(`${BASE_URL}movie/${id}?api_key=${API_KEY}&language=en-US`)\n    return response.data;\n}\nexport async function getMovieCredits(id) {\n    const response = await axios.get(`${BASE_URL}movie/${id}/credits?api_key=${API_KEY}&language=en-US`)\n    return response.data;\n}\n\nexport async function getMovieReviews(id) {\n    const response = await axios.get(`${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}&language=en-US`)\n    return response.data;\n}","import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { getMovieReviews } from \"API\";\n\n\nconst Reviews = () => {\n    const [reviews, setReviews] = useState([]);\n    const { movieId } = useParams();\n    useEffect(() => {\n        async function getReviews() {\n            try {\n                const data = await getMovieReviews(movieId);\n                setReviews(data.results);\n            } catch (error) {\n                console.log(error)\n            }\n        }\n        getReviews();\n    }, [movieId])\n    return (!reviews.length ? \"No reviews for this movie\" : <ul>\n        {\n            reviews.map(review => {\n                return <li key={review.id}>\n                    <p>Author: {review.author}</p>\n                    <p>{review.content}</p>\n                </li>\n            })\n        } </ul >\n    )\n}\n\nexport default Reviews;"],"names":["BASE_URL","API_KEY","getTrendingMovies","page","axios","response","data","getSearchMovies","name","getMovieDetails","id","getMovieCredits","getMovieReviews","useState","reviews","setReviews","movieId","useParams","useEffect","results","console","log","getReviews","length","map","review","author","content"],"sourceRoot":""}