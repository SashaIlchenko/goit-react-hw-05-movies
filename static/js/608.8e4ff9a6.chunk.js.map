{"version":3,"file":"static/js/608.8e4ff9a6.chunk.js","mappings":"+SACMA,EAAW,gCACXC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,yGAAiCC,EAAjC,+BAAwC,EAAxC,SACoBC,EAAAA,EAAAA,IAAA,UAAaJ,EAAb,sCAAmDC,EAAnD,iBAAmEE,EAAnE,sBADpB,cACGE,EADH,yBAEIA,EAASC,MAFb,mEAKA,SAAeC,EAAtB,iDAAO,OAAP,oBAAO,WAA+BC,EAAML,GAArC,uFACoBC,EAAAA,EAAAA,IAAA,UAAaJ,EAAb,gCAA6CC,EAA7C,iBAA6DE,EAA7D,4DAAqHK,IADzI,cACGH,EADH,yBAEIA,EAASC,MAFb,kEAKA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,uFACoBN,EAAAA,EAAAA,IAAA,UAAaJ,EAAb,iBAA8BU,EAA9B,oBAA4CT,EAA5C,oBADpB,cACGI,EADH,yBAEIA,EAASC,MAFb,kEAIA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA+BD,GAA/B,uFACoBN,EAAAA,EAAAA,IAAA,UAAaJ,EAAb,iBAA8BU,EAA9B,4BAAoDT,EAApD,oBADpB,cACGI,EADH,yBAEIA,EAASC,MAFb,kEAKA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAA+BF,GAA/B,uFACoBN,EAAAA,EAAAA,IAAA,UAAaJ,EAAb,iBAA8BU,EAA9B,4BAAoDT,EAApD,oBADpB,cACGI,EADH,yBAEIA,EAASC,MAFb,kE,gKCtBA,IAAMO,GAAU,iLASVC,GAAS,+XAgBTC,GAAS,oO,SCtBTC,EAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACxB,GAAkCC,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KAUA,OACI,UAACP,EAAD,CAAYI,SAPK,SAAAI,GAEjBA,EAAEC,iBACFL,EAASE,GACTC,EAAa,GAChB,EAEG,WACI,SAACN,EAAD,CAAWS,KAAK,SAAhB,qBAIA,SAACR,EAAD,CACIS,SAhBS,SAAAC,GACjBL,EAAaK,EAAIC,cAAcC,MAAMC,cACxC,EAeWL,KAAK,OACLM,aAAa,MACbC,WAAS,EACTC,YAAY,2BACZvB,KAAK,YACLmB,MAAOR,MAGtB,ECKD,EA/Be,WAAO,IAAD,EAEXa,GAAWC,EAAAA,EAAAA,MACjB,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMjB,EAAS,UAAGgB,EAAaE,IAAI,gBAApB,QAAgC,GAE/C,GAA4BnB,EAAAA,EAAAA,UAAS,IAArC,eAAOoB,EAAP,KAAeC,EAAf,MACAC,EAAAA,EAAAA,YAAU,WAAM,wCACZ,uFACSrB,EADT,2EAG6BZ,EAAAA,EAAAA,IAAgBY,EAAW,GAHxD,OAGcmB,EAHd,OAIQC,GAAU,OAAID,EAAOG,UAJ7B,gDAMQC,QAAQC,IAAR,MANR,0DADY,uBAAC,WAAD,wBAUZC,EACH,GAAE,CAACzB,EAAWmB,IAMf,OAAQ,iCAAE,SAACtB,EAAD,CAAWC,SALJ,SAACE,GAEdiB,EADiC,KAAdjB,EAAmB,CAAE0B,MAAO1B,GAAc,CAAC,EAEjE,KAGG,wBAAKmB,EAAOQ,KAAI,SAAAC,GACZ,OAAO,yBAAmB,SAAC,KAAD,CAASC,GAAE,UAAKD,EAAMrC,IAAMuC,MAAO,CAAEC,KAAMlB,GAA3C,SAAwDe,EAAMI,SAAxEJ,EAAMrC,GACzB,QAER,C","sources":["API.js","components/SearchBox.styled.jsx","components/SearchBox.jsx","pages/Movies.jsx"],"sourcesContent":["import axios from \"axios\";\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'e8d94f3e976148bda0a5c640d4df112b';\n\nexport async function getTrendingMovies(page = 1) {\n    const response = await axios.get(`${BASE_URL}trending/movie/day?api_key=${API_KEY}&page=${page}&media_type=movie`)\n    return response.data;\n}\n\nexport async function getSearchMovies(name, page) {\n    const response = await axios.get(`${BASE_URL}search/movie?api_key=${API_KEY}&page=${page}&language=en-US&page=1&include_adult=false&query=${name}`)\n    return response.data;\n}\n\nexport async function getMovieDetails(id) {\n    const response = await axios.get(`${BASE_URL}movie/${id}?api_key=${API_KEY}&language=en-US`)\n    return response.data;\n}\nexport async function getMovieCredits(id) {\n    const response = await axios.get(`${BASE_URL}movie/${id}/credits?api_key=${API_KEY}&language=en-US`)\n    return response.data;\n}\n\nexport async function getMovieReviews(id) {\n    const response = await axios.get(`${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}&language=en-US`)\n    return response.data;\n}","import styled from \"@emotion/styled/macro\";\nexport const SearchForm = styled.form`\ndisplay: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;`\n\nexport const SearchBtn = styled.button`\n  display: inline-block;\n    width: 65px;\n    height: 48px;\n    border: 0;\n    background-image: url('https://image.flaticon.com/icons/svg/149/149852.svg');\n    background-size: 40%;\n    background-repeat: no-repeat;\n    background-position: center;\n    opacity: 0.6;\n    transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    cursor: pointer;\n    outline: none;  \n    &:hover {\n      opacity: 1;  \n    }`\nexport const FormInput = styled.input`\ndisplay: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n  &::placeholder {\n     font: inherit;\n  font-size: 18px;\n  }`\n","import { useState } from \"react\";\nimport { SearchForm, SearchBtn, FormInput } from \"./SearchBox.styled\";\n\n\nexport const SearchBox = ({ onSubmit }) => {\n    const [movieName, setMovieName] = useState('');\n    const handleChange = evt => {\n        setMovieName(evt.currentTarget.value.toLowerCase());\n    };\n    const handleSubmit = e => {\n\n        e.preventDefault();\n        onSubmit(movieName)\n        setMovieName('');\n    }\n    return (\n        <SearchForm onSubmit={handleSubmit}>\n            <SearchBtn type=\"submit\">\n                Search\n            </SearchBtn>\n\n            <FormInput\n                onChange={handleChange}\n                type=\"text\"\n                autoComplete=\"off\"\n                autoFocus\n                placeholder=\"Search images and photos\"\n                name=\"imageName\"\n                value={movieName} />\n        </SearchForm>\n    )\n}","import { useState, useEffect } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { NavLink, useLocation } from \"react-router-dom\";\nimport { getSearchMovies } from '../API'\nimport { SearchBox } from \"../components/SearchBox\";\nconst Movies = () => {\n    // const [movieName, setMovieName] = useState('');\n    const location = useLocation();\n    const [searchParams, setSearchParams] = useSearchParams();\n    const movieName = searchParams.get(\"query\") ?? \"\";\n\n    const [movies, setMovies] = useState([]);\n    useEffect(() => {\n        async function getMovies() {\n            if (!movieName) return;\n            try {\n                const movies = await getSearchMovies(movieName, 1);\n                setMovies([...movies.results]);\n            } catch (error) {\n                console.log(error)\n            }\n        }\n        getMovies();\n    }, [movieName, movies])\n    const onSubmit = (movieName) => {\n        const nextParams = movieName !== \"\" ? { query: movieName } : {};\n        setSearchParams(nextParams);\n    }\n\n    return (<><SearchBox onSubmit={onSubmit} />\n        <ul>{movies.map(movie => {\n            return <li key={movie.id}><NavLink to={`${movie.id}`} state={{ from: location }}>{movie.title}</NavLink></li>\n        })}</ul>\n    </>)\n}\n\nexport default Movies;"],"names":["BASE_URL","API_KEY","getTrendingMovies","page","axios","response","data","getSearchMovies","name","getMovieDetails","id","getMovieCredits","getMovieReviews","SearchForm","SearchBtn","FormInput","SearchBox","onSubmit","useState","movieName","setMovieName","e","preventDefault","type","onChange","evt","currentTarget","value","toLowerCase","autoComplete","autoFocus","placeholder","location","useLocation","useSearchParams","searchParams","setSearchParams","get","movies","setMovies","useEffect","results","console","log","getMovies","query","map","movie","to","state","from","title"],"sourceRoot":""}